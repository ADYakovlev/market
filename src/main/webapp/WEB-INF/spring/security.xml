<beans:beans xmlns="http://www.springframework.org/schema/security"          
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                 http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http use-expressions="true" pattern="/rest/**" create-session="stateless">
        <intercept-url pattern="/rest/**" access="permitAll" />
        <http-basic />
        <anonymous username="guest" granted-authority="ROLE_ANONYMOUS"/>
    </http>
    
    <!-- Конфигурация Spring Security -->
    <http auto-config="true" use-expressions="true" create-session="ifRequired" disable-url-rewriting="true"> 
        <intercept-url pattern="/**" access="permitAll" />
        <form-login
            login-page="/login"
            username-parameter="email"
            password-parameter="password"
            authentication-success-handler-ref="authenticationSuccessHandler"
            authentication-failure-url="/login?error"/>
        <logout
            logout-success-url="/"
            delete-cookies="JSESSIONID"/>
        <remember-me key="marketAppKey"/>
        
        <session-management>
            <concurrency-control max-sessions="25" error-if-maximum-exceeded="true" />
        </session-management>
    
        <anonymous username="guest" granted-authority="ROLE_ANONYMOUS"/>
    </http>

    <beans:bean id="authenticationSuccessHandler" class="market.security.CustomAuthenticationSuccessHandler" />

    <!-- Аннотации для ограничения прав доступа -->
    <global-method-security
            secured-annotations="enabled"
            jsr250-annotations="enabled"
            pre-post-annotations="enabled"/>

    <!-- Управляющий аутентификацией -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="daoAuthenticationProvider"/>
    </authentication-manager>
    
    <!-- Источник аккаунтов пользователей -->
    <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="customUserDetailsService"/>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>
    <beans:bean id="customUserDetailsService" class="market.security.UserDetailsServiceImpl">
        <beans:constructor-arg name="userAccountService" ref="userAccountService" />
    </beans:bean>
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <beans:bean class="market.security.AuthenticationService">
        <beans:constructor-arg name="authenticationManager" ref="authenticationManager" />
    </beans:bean>
 
</beans:beans>
